---
layout: post
title: Setting up Django on Azure Web Apps
author: kevin-brown
date: 2015-07-10 20:30:00 EDT
category: python
tags: azure python django
---

The latest project that I'm working on is using [Azure Web Apps][azure-web-apps]
(formerly Azure Web Sites) to serve a [Django-backed][django] web application.
[Azure Web Apps supports Python and Django][azure-web-apps-django], but the
guides provided do not work out-of-the-box and have obscure bugs that make it
difficult to actually deploy your application properly.

## Python Tools for Visual Studio (PTVS)

It is recommended that you use [PTVS][ptvs] when initially setting up your
project, as it will greatly reduce the amount of fiddling that is required to
get IIS and your virtual environment working.

### Use a virtual environment for your packages

It's highly recommended, and it will make it easier for other developer (and
Azure) to determine what packages your project requires.

### Do not include your virtual environment in your repository

This is recommended by the Azure guides, but it does not scale well and can lead
to random bugs if you ever upgrade your version of Python.

### Updating Python packages

The built-in package handling in Visual Studio only supports installing packages
from your `requirements.txt` file, but does not support upgrading them.

### Handling migrations

PTVS was designed for older versions of Django, where you had to synchronize
your database whenever a new model was added, and you had to handle any
modifications after that on your own. Django, as of 1.7, now provides a
migrations framework that you can use.

## Using Git to deploy your repository

It's highly recommended, and it allows for a continuous deployment process.

### Azure does not deploy from your project file

Unlike [other Azure Web App languages][azure-web-apps-proj-file], the `.pyproj`
file generated by PTVS cannot be deployed automatically on Azure.

## Setting up IIS to work with Django

IIS is used when your Django application is deployed to Azure, but not when you
are developing your application on your local system.

### Handling static files

It is recommended to use a service designed to store static files, such as
[Azure Blob Storage][azure-blob-storage], instead of serving your files using
Django or IIS. But if you are interested in serving your static files using IIS
on Azure, you are going to need to play with your `web.config` file.

## Debugging your Django application

More than likely you will encounter an issue at some point or another that only
happens when Django is deployed to Azure, but does not happen locally.

### Using Django's `DEBUG` setting

It is highly recommended to tie this to an environment variable that can be set
while in production, like `PRODUCTION`.

### The local development server

The [Django development server][django-dev-server] is used when developing
locally, and it is not possible to use IIS instead of it. By default it will
generate a random port number that your Django application will use, but it is
recommended to change this to a static number in order to reduce the number of
port collisions you encounter.

### Debugging while using Git deployments

The standard debugging tools provided by PTVS cannot be used when deploying
using Git. But you can set some environment variables to make the Git deployment
logging more verbose, which can help.

## Using other languages in your Python project (Like Node)

By default, Kudu will prefer Node over Python and will assume that any project
containing a `project.json` file is meant to be a Node project.

### Crafting your custom deployment script

You most likely don't need everything in the standard deployment script, but at
least the default deployment scripts are public.

[azure-web-apps]: http://azure.microsoft.com/en-us/services/app-service/web/
[azure-web-apps-django]: https://azure.microsoft.com/en-us/documentation/articles/web-sites-python-create-deploy-django-app/
[django]: https://www.djangoproject.com/
[ptvs]: http://microsoft.github.io/PTVS/

[azure-blob-storage]:
[azure-web-apps-git]:
[django-debug-setting]:
[django-dev-server]:
[kudu]:
[kudu-script]:
